# -*- coding: utf-8 -*-

import simple_draw as sd


# На основе кода из практической части реализовать снегопад:
# - создать списки данных для отрисовки N снежинок
# - нарисовать падение этих N снежинок
# - создать список рандомных длин лучей снежинок (от 10 до 100) и пусть все снежинки будут разные

N = 20

# Пригодятся функции
# sd.get_point()
# sd.snowflake()
# sd.sleep()
# sd.random_number()
# sd.user_want_exit()

point_x_list = []
point_y_list = []
size_list = []      # 10-18 список размеров снежинки
factor_a_list = []  # .6  список ответвления лучиков
factor_b_list = []  # .35 список длины лучиков
factor_c_list = []  # 60 список уголов отклонения лучиков
x = 0
for _ in range(0, N):
    x += sd.random_number(25, 30)
    point_x_list.append(x)
    point_y_list.append(sd.random_number(200, 250))
    size_list.append(sd.random_number(10, 18))
    factor_a_list.append(sd.random_number(40, 80) / 100)
    factor_b_list.append(sd.random_number(20, 50) / 100)
    factor_c_list.append(sd.random_number(40, 70))

while True:
    sd.clear_screen()
    for index, point_x in enumerate(point_x_list):
        point_y = point_y_list[index]
        point_y_list[index] = point_y_list[index] - 50  # уменьшаем координату у
        center_snowflake = sd.get_point(point_x, point_y)  # рисуем снежинку
        sd.snowflake(center=center_snowflake, length=size_list[index], factor_a=factor_a_list[index],
                     factor_b=factor_b_list[index], factor_c=factor_c_list[index])
        sd.sleep(0.1)
    if sd.user_want_exit() or point_y < 50:  # проверка выхода из цикла
        break
sd.pause()

# Примерный алгоритм отрисовки снежинок
#   навсегд а
#     очистка экрана
#     для индекс, координата_х из списка координат снежинок
#       получить координата_у по индексу
#       изменить координата_у и запомнить её в списке по индексу
#       создать точку отрисовки снежинки по координатам
#       нарисовать снежинку белым цветом в этой точке
#     немного поспать
#     если пользователь хочет выйти
#       прервать цикл


# Часть 2 (делается после зачета первой части)
#
# Ускорить отрисовку снегопада
# - убрать clear_screen() из цикла: полная очистка всего экрана - долгая операция.
# - использовать хак для стирания старого положения снежинки:
#       отрисуем её заново на старом месте, но цветом фона (sd.background_color) и она исчезнет!
# - использовать функции sd.start_drawing() и sd.finish_drawing()
#       для начала/окончания отрисовки кадра анимации
# - между start_drawing и finish_drawing библиотека sd ничего не выводит на экран,
#       а сохраняет нарисованное в промежуточном буфере, за счет чего достигается ускорение анимации
# - в момент вызова finish_drawing все нарисованное в буфере разом покажется на экране
#
# Примерный алгоритм ускоренной отрисовки снежинок
#   навсегда
#     начать рисование кадра
#     для индекс, координата_х из списка координат снежинок
#       получить координата_у по индексу
#       создать точку отрисовки снежинки
#       нарисовать снежинку цветом фона
#       изменить координата_у и запомнить её в списке по индексу
#       создать новую точку отрисовки снежинки
#       нарисовать снежинку на новом месте белым цветом
#     закончить рисование кадра
#     немного поспать
#     если пользователь хочет выйти
#       прервать цикл


# Усложненное задание (делать по желанию)
# - сделать рандомные отклонения вправо/влево при каждом шаге
# - сделать сугоб внизу экрана - если снежинка долетает до низа, оставлять её там,
#   и добавлять новую снежинку
# Результат решения см https://youtu.be/XBx0JtxHiLg
